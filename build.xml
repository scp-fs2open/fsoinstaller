<?xml version="1.0" encoding="UTF-8" ?>
<project name="fsoinstaller" default="run" basedir=".">

  <property name="projectname" value="FreeSpace Open Installer"/>
  <property name="projectversion" value="2.3.4.0"/>
  <property name="main-class" value="com.fsoinstaller.main.FreeSpaceOpenInstaller"/>
  <property name="checkxstr-class" value="com.fsoinstaller.utils.CheckXSTR"/>
  <property name="jar-launcher" value="com.jdotsoft.jarloader.JarLauncher"/>

    <!-- Change this path to the actual location of Launch4j when using the launch4j task -->
<!--
  <property name="launch4j.dir" location="C:\Program Files (x86)\Launch4j" />
  <taskdef name="launch4j"
           classname="net.sf.launch4j.ant.Launch4jTask"
           classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
-->

  <property name="build" value="build"/>
  <property name="dist" value="dist"/>
  <property name="docs" value="docs"/>
  <property name="javadoc" value="docs/api"/>
  <property name="lib" value="lib"/>
  <property name="resources" value="resources"/>
  <property name="src" value="src"/>

  <path id="build.class.path">
    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="runtime.class.path">
    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
    <pathelement path="${build}"/>
    <pathelement path="."/>
  </path>

  <target name="clean">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="compile">
    <mkdir dir="${build}"/>
    <javac classpathref="build.class.path" debug="on" srcdir="${src}" destdir="${build}" source="1.5" target="1.5"/>
  </target>

  <target name="run" depends="compile">
    <java classpathref="runtime.class.path" classname="${main-class}" fork="true"/>
  </target>

  <target name="hash" depends="compile">
    <java classpathref="runtime.class.path" classname="${main-class}" fork="true">
      <arg value="hash"/>
    </java>
  </target>

  <target name="test" depends="compile">
    <java classpathref="runtime.class.path" classname="${main-class}" fork="true">
      <arg value="test"/>
    </java>
  </target>

  <target name="validate" depends="compile">
    <java classpathref="runtime.class.path" classname="${main-class}" fork="true">
      <arg value="validate"/>
    </java>
  </target>

  <target name="checkxstr" depends="compile">
    <java classpathref="runtime.class.path" classname="${checkxstr-class}" fork="true"/>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${dist}"/>

    <!-- jar it up -->
    <jar jarfile="${dist}/FreeSpaceOpenInstaller.jar">
      <fileset file="application.properties"/>
      <fileset dir="${build}" excludes="**/svn*"/>
<!-- we don't need the .java files because they make the jar bigger
      <fileset dir="${src}" excludes="**/svn*"/> -->
      <fileset dir="." includes="${lib}/**" excludes="**/svn*"/>
      <fileset dir="." includes="${resources}/**" excludes="**/svn*"/>
      <fileset dir="${docs}" excludes="**/svn*"/>
      <manifest>
        <attribute name="Main-Class" value="${jar-launcher}"/>
        <attribute name="SplashScreen-Image" value="${resources}/splash.gif"/>
      </manifest>
    </jar>
  </target>

  <target name="javadoc" depends="compile">
    <delete dir="${javadoc}"/>
    <javadoc packagenames="com.fsoinstaller.*"
        sourcepath="${src}"
        defaultexcludes="yes"
        destdir="${javadoc}"
        author="true"
        version="true"
        use="true"
        linksource="true"
        windowtitle="${projectname} v${projectversion}">
      <doctitle><![CDATA[<h1>${projectname} v${projectversion}<br>API Specification</h1>]]></doctitle>
    </javadoc>
  </target>

<!--
    <target name="launch4j" depends="jar">
        <launch4j configFile="./resources/launch4j.xml" jar="${dist}/FreeSpaceOpenInstaller.jar"
                  outfile="${dist}/FreeSpaceOpenInstaller.exe" fileVersion="${projectversion}"
                  txtFileVersion="${projectversion}" productVersion="${projectversion}"
                  txtProductVersion="${projectversion}"/>
    </target>
-->
</project>
